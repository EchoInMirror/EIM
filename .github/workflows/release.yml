name: Release

on:
  release:
    types:
      - created

jobs:
  build-plugin:
    runs-on: ubuntu-latest
    steps:
      - name: Restore vcpkg and its artifacts.
        uses: actions/cache@v3
        id: vcpkg-cache
        with:
          path: |
            ${{ env.VCPKG_ROOT }}
            ${{ github.workspace }}/build/vcpkg_installed
            !${{ env.VCPKG_ROOT }}/.git
            !${{ env.VCPKG_ROOT }}/buildtrees
            !${{ env.VCPKG_ROOT }}/packages
            !${{ env.VCPKG_ROOT }}/downloads
          key: |
            ${{ hashFiles( 'vcpkg.json' ) }}-${{ runner.os }}-cache-key-v1

      - name: Get npm cache directory
        id: npm-cache
        run: |
          echo "::set-output name=dir::$(npm config get cache)"

      # - uses: actions/cache@v3
      #   with:
      #     path: ${{ steps.npm-cache.outputs.dir }}
      #     key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
      #     restore-keys: |
      #       ${{ runner.os }}-node-

      - name: Check out git repository
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Get vcpkg
        if: ${{ runner.os == 'Windows' && steps.vcpkg-cache.outputs.cache-hit != 'true' }}
        run: |
          cd ${{ github.workspace }}
          mkdir build -force
          git clone https://github.com/Microsoft/vcpkg.git
          cd vcpkg
          .\bootstrap-vcpkg.bat

      - name: remove system vcpkg
        if: runner.os == 'Windows'
        run: rm -rf "$VCPKG_INSTALLATION_ROOT"
        shell: bash

      - uses: ilammy/msvc-dev-cmd@v1
        if: runner.os == 'Windows'
        with:
          arch: x64

      - name: Running cmake
        run: |
          cd ${{ github.workspace }}
          cd build
          cmake .. -DCMAKE_TOOLCHAIN_FILE=${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake -DCMAKE_BUILD_TYPE=Release
      - name: Build Solution
        run: |
          cd build
          cmake --build . --parallel --config Release

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: build/EIM_artefacts/Release/Echo In Mirror.exe
          tag: ${{ github.ref }}

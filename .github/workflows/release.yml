name: Release

on:
  release:
    types:
      - created

jobs:
  build:
    runs-on: windows-latest
    env:
      BUILD_TYPE: Release
    steps:
      - name: Restore vcpkg and its artifacts.
        uses: actions/cache@v3
        id: vcpkg-cache
        with:
          path: |
            ${{ env.VCPKG_INSTALLATION_ROOT }} 
            ./build/vcpkg_installed
            ${{ env.HOME }}/.cache/vcpkg/archives
            ${{ env.XDG_CACHE_HOME }}/vcpkg/archives
            ${{ env.LOCALAPPDATA }}\vcpkg\archives
            ${{ env.APPDATA }}\vcpkg\archives
          key: ${{ runner.os }}-${{ env.BUILD_TYPE }}-${{ hashFiles('**/CMakeLists.txt') }}-${{ hashFiles('./vcpkg.json')}}
          restore-keys: |
            ${{ runner.os }}-${{ env.BUILD_TYPE }}

      - name: Get npm cache directory
        id: npm-cache
        run: |
          echo "::set-output name=dir::$(npm config get cache)"

      - uses: actions/cache@v3
        with:
          path: ${{ steps.npm-cache.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Check out git repository
        uses: actions/checkout@v2
        with:
          submodules: true

      - uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Build web page
        run: |
          cd ${{ github.workspace }}
          npm install --production
          npm run generate:proto
          npm run build

      - name: Running cmake
        run: |
          cd ${{ github.workspace }}
          cd build
          cmake .. -DCMAKE_TOOLCHAIN_FILE=${{ env.VCPKG_INSTALLATION_ROOT }}/scripts/buildsystems/vcpkg.cmake -DVCPKG_TARGET_TRIPLET=x64-windows-static -DCMAKE_BUILD_TYPE=Release

      - name: Build Solution
        run: |
          cd ${{ github.workspace }}
          cd build
          cmake --build . --parallel --config Release

      - name: Pack
        run: |
          cd ${{ github.workspace }}/build
          cp ../dist/ EIM_artefacts/Release/ -r
          zip -r EIM.zip EIM_artefacts/Release/

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: build/EIM.zip
          tag: ${{ github.ref }}

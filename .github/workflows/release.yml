name: Release

on:
  release:
    types:
      - created

jobs:
  build:
    name: ${{ matrix.os }}-${{ github.workflow }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest]
        include:
          - os: windows-latest
            vcpkgCommitId: '2ac61f87f69f0484b8044f95ab274038fbaf7bdd'
    steps:
      - name: Get npm cache directory
        id: npm-cache
        run: |
          echo "::set-output name=dir::$(npm config get cache)"

      - uses: actions/cache@v3
        with:
          path: ${{ steps.npm-cache.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Check out git repository
        uses: actions/checkout@v2
        with:
          submodules: true

      - uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Build web page
        run: |
          npm install --production
          npm run generate:proto
          npm run build
          rm -r .parcel-cache
          rm -r node_modules

      - uses: lukka/get-cmake@main

      - name: Restore artifacts, or setup vcpkg (do not install any package)
        uses: lukka/run-vcpkg@main
        id: runvcpkg
        with:
          vcpkgDirectory: '${{ runner.workspace }}/b/vcpkg'
          vcpkgGitCommitId: '${{ matrix.vcpkgCommitId }}'
          vcpkgJsonGlob: '${{ github.workspace }}/vcpkg.json'

      - name: Hack vcpkg
        shell: cmd
        run: |
          echo.>> ${{ runner.workspace }}/b/vcpkg/triplets/x64-windows.cmake
          echo set(VCPKG_BUILD_TYPE %CONFIGURATION%)>> ${{ runner.workspace }}/b/vcpkg/triplets/x64-windows.cmake
          echo.>> ${{ runner.workspace }}/b/vcpkg/triplets/x64-windows.cmake

      - name: Run CMake with vcpkg.json manifest
        uses: lukka/run-cmake@main
        with:
          cmakeListsTxtPath: '${{ github.workspace }}/CMakeLists.txt'
          configurePreset: ninja-multi-vcpkg
          buildPreset: ninja-multi-vcpkg

      - name: Pack
        run: |
          cd ${{ github.workspace }}/builds/ninja-multi-vcpkg/EIM_artefacts
          cp ${{ github.workspace }}/dist/ Release/ -r
          cp ../EIMPluginScanner.exe Release/
          zip -r EIM.zip Release/

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ github.workspace }}/builds/ninja-multi-vcpkg/EIM_artefacts/EIM.zip
          tag: ${{ github.ref }}
